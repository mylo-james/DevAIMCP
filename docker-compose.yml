version: '3.8'

services:
  # DevAI MCP Server
  devai-mcp-server:
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: devai-mcp-server
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://devai_user:devai_password@postgres:5432/devai_mcp
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./server/.env:/app/.env:ro
      - ./seed:/app/seed:ro
    networks:
      - devai-network

  # PostgreSQL Database
  postgres:
    image: pgvector/pgvector:pg16
    container_name: devai-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=devai_mcp
      - POSTGRES_USER=devai_user
      - POSTGRES_PASSWORD=devai_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./seed/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./seed/database/extensions.sql:/docker-entrypoint-initdb.d/00-extensions.sql:ro
    ports:
      - '5433:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U devai_user -d devai_mcp']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - devai-network

  # pgAdmin (optional, for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: devai-pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@devai.local
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - '8080:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - devai-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  devai-network:
    driver: bridge
