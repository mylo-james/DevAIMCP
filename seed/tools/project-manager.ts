// Project type defined for reference but not used in this file

import { createProject, getProjectById, listProjects } from '../lib/database';

export async function manageProject(args: any) {
  const action = args.action as string;
  switch (action) {
    case 'create': {
      const created = await createProject({
        // id is auto-generated by database
        name: args.name,
        description: args.description,
        repository_url: args.repository_url,
        language: args.language,
        framework: args.framework,
        metadata: args.metadata,
        // created_at is auto-generated by database
        // updated_at is auto-generated by database
      });
      return { content: [{ type: 'text', text: JSON.stringify(created) }] };
    }
    case 'get': {
      const project = await getProjectById(Number(args.projectId));
      if (!project) return { content: [{ type: 'text', text: 'Not found' }] };
      return { content: [{ type: 'text', text: JSON.stringify(project) }] };
    }
    case 'list': {
      const projects = await listProjects();
      return { content: [{ type: 'text', text: JSON.stringify(projects) }] };
    }
    case 'context': {
      const project = await getProjectById(Number(args.projectId));
      const context = project ? `Context for ${project.name}` : '';
      return { content: [{ type: 'text', text: context }] };
    }
    default:
      return { content: [{ type: 'text', text: 'Unknown action' }] };
  }
}
